// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator gen {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "./generated/type-graphql"
}

model User {
  // Proposed feature to be released soon.
  // The triple slash below is needed
  // as it's not a regular comment.
  /// @TypeGraphQL.omit(input: true)
  id        String    @id @default(uuid())
  // Proposed feature to be released soon.
  // The triple slash below is needed
  // as it's not a regular comment.
  /// @TypeGraphQL.omit(input: true)
  updatedAt DateTime  @updatedAt
  // Proposed feature to be released soon.
  // The triple slash below is needed
  // as it's not a regular comment.
  /// @TypeGraphQL.omit(input: true)
  createdAt DateTime  @default(now())
  email     String    @unique
  password  String
  firstName String    @db.VarChar(255)
  lastName  String    @db.VarChar(255)
  age       Int?      @db.Integer
  // Feature is replacement for native
  // feature in the works to be released
  // soon.
  /// @onDelete(CASCADE)
  posts     Post[]
  // Feature is replacement for native
  // feature in the works to be released
  // soon.
  /// @onDelete(CASCADE)
  comments  Comment[]
}

model Post {
  // Proposed feature to be released soon.
  // The triple slash below is needed
  // as it's not a regular comment.
  /// @TypeGraphQL.omit(input: true)
  id        String    @id @default(uuid())
  // Proposed feature to be released soon.
  // The triple slash below is needed
  // as it's not a regular comment.
  /// @TypeGraphQL.omit(input: true)
  updatedAt DateTime  @updatedAt
  // Proposed feature to be released soon.
  // The triple slash below is needed
  // as it's not a regular comment.
  /// @TypeGraphQL.omit(input: true)
  createdAt DateTime  @default(now())
  // Feature is replacement for native
  // feature in the works to be released
  // soon.
  /// @onDelete(SET_NULL)
  author    User      @relation(fields: [authorId], references: [id])
  // Feature is replacement for native
  // feature in the works to be released
  // soon.
  /// @onDelete(SET_NULL)
  authorId  String
  title     String    @db.VarChar(255)
  body      String
  published Boolean   @default(true)
  // Feature is replacement for native
  // feature in the works to be released
  // soon.
  /// @onDelete(CASCADE)
  comments  Comment[]
}

model Comment {
  // Proposed feature to be released soon.
  // The triple slash below is needed
  // as it's not a regular comment.
  /// @TypeGraphQL.omit(input: true)
  id        String   @id @default(uuid())
  // Proposed feature to be released soon.
  // The triple slash below is needed
  // as it's not a regular comment.
  /// @TypeGraphQL.omit(input: true)
  updatedAt DateTime @updatedAt
  // Proposed feature to be released soon.
  // The triple slash below is needed
  // as it's not a regular comment.
  /// @TypeGraphQL.omit(input: true)
  createdAt DateTime @default(now())
  author    User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  text      String   @db.VarChar(255)
  // Feature is replacement for native
  // feature in the works to be released
  // soon.
  /// @onDelete(SET_NULL)
  userId    String
  // Feature is replacement for native
  // feature in the works to be released
  // soon.
  /// @onDelete(SET_NULL)
  postId    String
}
